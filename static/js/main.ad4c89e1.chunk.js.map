{"version":3,"sources":["components/Square/Square.module.scss","components/Game/Game.module.scss","components/Modal/Modal.module.scss","components/Board/Board.module.scss","components/History/History.module.scss","components/Square/Square.js","components/Board/Board.js","components/Modal/Modal.js","components/History/History.js","components/Game/Game.js","utils/game.js","utils/array.js","index.js"],"names":["module","exports","Square","props","state","shaked","handleClick","bind","this","value","className","style","xo","height","width","cx","cy","r","x1","y1","x2","y2","onClick","setState","htmlClass","boardCell","onAnimationEnd","renderSquare","Component","Board","rows","colls","board","row","column","col","push","key","squares","boardColumn","createBoard","Modal","root","document","createElement","body","appendChild","removeChild","ReactDOM","createPortal","modalOverlay","modalWindow","modalHeader","onClose","children","History","moves","history","map","move","index","text","currentMove","active","initState","Array","fill","gameOver","xIsNext","title","isModalOpen","Game","JSON","parse","stringify","slice","current","length","winner","callback","array","amountX","amountO","i","errorObject","xIsWin","Error","matrix","rowCount","columnCount","diagonal","loopDiagonals","j","loopRows","coll","loopColls","error","message","calculateWinner","concat","wrapper","titleText","handleSquareClick","jumpTo","refresh","handleShowModal","modalBody","modalFooter","render","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,GAAK,mBAAmB,OAAS,uBAAuB,MAAQ,wB,gBCAxHD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,UAAY,wBAAwB,QAAU,sBAAsB,UAAY,wBAAwB,YAAc,4B,kBCAxKD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,YAAc,2BAA2B,YAAc,6B,gBCApHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,6B,gBCA7DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,0LCEzCC,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,QAAQ,GAGZ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,4EAWf,OAAOC,KAAKL,MAAMM,OACd,IAAK,IACD,OACI,yBAAKC,UAAWC,IAAMC,GAAIC,OAAO,MAAMC,MAAM,OACzC,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAGtC,IAAK,IACD,OACI,yBAAKP,UAAWC,IAAMC,GAAIC,OAAO,MAAMC,MAAM,OACzC,0BAAMI,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAG7C,QACI,OAAO,Q,oCAKf,IAAMhB,IAASG,KAAKL,MAAMmB,UAE1Bd,KAAKe,SAAS,CAAClB,a,+BAGT,IAAD,OAGCmB,EAFahB,KAAKJ,MAAhBC,OAEgB,UAAMM,IAAMc,UAAZ,YAAyBd,IAAMN,QAAWM,IAAMc,UAExE,OACI,yBAAKf,UAAWc,EAAWF,QAASd,KAAKF,YAAaoB,eAAgB,kBAAM,EAAKH,SAAS,CAAClB,QAAQ,MAC9FG,KAAKmB,oB,GA5CcC,a,iBCCfC,E,oLACLC,EAAMC,GAGd,IAHsB,IAAD,OACfC,EAAQ,GADO,WAGZC,GAGL,IAFA,IAAMC,EAAS,GAJE,WAMRC,GACLD,EAAOE,KACH,kBAAC,EAAD,CACIC,IAAG,UAAKJ,GAAL,OAAWE,GACd1B,MAAO,EAAKN,MAAMmC,QAAQL,GAAKE,GAC/Bb,QAAS,kBAAM,EAAKnB,MAAMmB,QAAQW,EAAKE,QAL1CA,EAAM,EAAEA,EAAMJ,EAAMI,IAAQ,EAA5BA,GAUTH,EAAMI,KACF,yBAAKC,IAAKJ,EAAKvB,UAAWC,IAAM4B,aAC3BL,KAfJD,EAAM,EAAEA,EAAMH,EAAKG,IAAQ,EAA3BA,GAoBT,OAAOD,I,+BAIP,OACI,yBAAKtB,UAAWC,IAAMqB,OACjBxB,KAAKgC,YAAYhC,KAAKL,MAAM2B,KAAMtB,KAAKL,MAAM4B,Y,GA9B3BH,a,iBCAda,E,2MACjBC,KAAOC,SAASC,cAAc,O,mFAG1BD,SAASE,KAAKC,YAAYtC,KAAKkC,Q,6CAI/BC,SAASE,KAAKE,YAAYvC,KAAKkC,Q,+BAI/B,OAAOM,IAASC,aACZ,yBAAKvC,UAAWC,IAAMuC,cACpB,yBAAKxC,UAAWC,IAAMwC,aACpB,yBAAKzC,UAAWC,IAAMyC,aAClB,0BAAM9B,QAASd,KAAKL,MAAMkD,SAA1B,SAGH7C,KAAKL,MAAMmD,WAGhB9C,KAAKkC,U,GAtBkBd,a,iBCDd2B,E,iLACP,IAAD,OACCC,EAAQhD,KAAKL,MAAMsD,QAAQC,KAAI,SAACC,EAAMC,GACxC,IAAMC,EAAOD,EAAK,sBACGA,GACf,mBAEApC,EAAYoC,IAAU,EAAKzD,MAAM2D,YAAcnD,IAAMoD,OAAS,GAEpE,OACI,wBAAIrD,UAAWc,EAAWa,IAAKuB,EAAOtC,QAAS,kBAAM,EAAKnB,MAAMmB,QAAQsC,KACnEC,MAKb,OACI,wBAAInD,UAAWC,IAAM8C,SAChBD,O,GAlBoB5B,a,gBCIrC,IAGMoC,EAAY,CAChBlC,KAJW,EAKXC,MAJY,EAKZ0B,QAAS,CACP,CACEnB,QAAS,IAAI2B,MARN,GAQkBC,KAAK,IAAID,MAP1B,GAOuCC,KAAK,OACpDC,UAAU,IAGdL,YAAa,EACbM,SAAS,EACTC,MAAO,cACPC,aAAa,GAGMC,E,YACnB,WAAYpE,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQoE,KAAKC,MAAMD,KAAKE,UAAUV,IAHtB,E,+EAMD/B,EAAKE,GACrB,IAAM/B,EAAQoE,KAAKC,MAAMD,KAAKE,UAAUlE,KAAKJ,QAEvCqD,EAAUe,KAAKC,MAAMD,KAAKE,UAAUtE,EAAMqD,QAAQkB,MAAM,EAAGvE,EAAM0D,YAAc,KAE/Ec,EAAUJ,KAAKC,MAAMD,KAAKE,UAAUjB,EAAQA,EAAQoB,OAAS,KAEnE,GAAID,EAAQtC,QAAQL,GAAKE,IAAQ/B,EAAM+D,SACrC,OAAO,EAGTS,EAAQtC,QAAQL,GAAKE,GAAO/B,EAAMgE,QAAU,IAAM,IAElDhE,EAAMgE,SAAWhE,EAAMgE,QACvBhE,EAAMiE,MAAQjE,EAAMgE,QAAU,SAAW,SAEzC,IAAMU,EC9CH,SAAyBxC,GAC5B,IAEMyC,EAAW,SAACC,GACd,KAAIA,EAAMH,OAHG,GAGb,CAOA,IAHA,IAAII,EAAU,EACVC,EAAU,EAELC,EAAI,EAAGA,EAAIH,EAAMH,OAAQM,IAC9B,OAAQH,EAAMG,IACV,IAAK,IACDF,IACA,MACJ,IAAK,IACDC,IAOZ,GAvBa,IAuBTD,GAvBS,IAuBeC,EAA5B,CAIA,IAEME,EAAc,CAChBC,OA9BS,IA2BEJ,GAMf,MAAM,IAAIK,MAAMd,KAAKE,UAAUU,OAGnC,KCvCG,SAAuBG,EAAQR,GAIlC,IAHA,IAAMS,EAAWD,EAAOV,OAClBY,EAAcF,EAAO,GAAGV,OAErBM,EAAI,EAAGA,EAAIK,EAAW,EAAGL,IAAK,CAGnC,IAFA,IAAMO,EAAW,GAERzD,EAAMkD,EAAGhD,EAAM,EAAGF,GAAO,GAAKE,EAAMsD,EAAaxD,IAAOE,IAC7DuD,EAAStD,KAAKmD,EAAOtD,GAAKE,IAG9B4C,EAASW,GAIb,IAAK,IAAIP,EAAI,EAAGA,EAAIM,EAAaN,IAAK,CAGlC,IAFA,IAAMO,EAAW,GAERzD,EAAMuD,EAAW,EAAGrD,EAAMgD,EAAGlD,GAAO,GAAKE,EAAMsD,EAAaxD,IAAOE,IACxEuD,EAAStD,KAAKmD,EAAOtD,GAAKE,IAG9B4C,EAASW,GAGb,IAAK,IAAIP,EAAIK,EAAW,EAAGL,GAAK,EAAGA,IAAK,CAGpC,IAFA,IAAMO,EAAW,GAERzD,EAAMkD,EAAGhD,EAAM,EAAGF,EAAMuD,GAAYrD,EAAMsD,EAAaxD,IAAOE,IACnEuD,EAAStD,KAAKmD,EAAOtD,GAAKE,IAG9B4C,EAASW,GAGb,IAAK,IAAIP,EAAI,EAAGA,EAAIM,EAAaN,IAAK,CAGlC,IAFA,IAAMO,EAAW,GAERzD,EAAM,EAAGE,EAAMgD,EAAGlD,EAAMuD,GAAYrD,EAAMsD,EAAaxD,IAAOE,IACnEuD,EAAStD,KAAKmD,EAAOtD,GAAKE,IAG9B4C,EAASW,IDFTC,CAAcrD,EAASyC,GCMxB,SAAkBQ,EAAQR,GAI7B,IAHA,IAAMS,EAAWD,EAAOV,OAClBY,EAAcF,EAAO,GAAGV,OAErBM,EAAI,EAAGA,EAAIK,EAAUL,IAAK,CAG/B,IAFA,IAAMlD,EAAM,GAEH2D,EAAI,EAAGA,EAAIH,EAAaG,IAC7B3D,EAAIG,KAAKmD,EAAOJ,GAAGS,IAGvBb,EAAS9C,IDhBT4D,CAASvD,EAASyC,GCoBnB,SAAmBQ,EAAQR,GAI9B,IAHA,IAAMS,EAAWD,EAAOV,OAClBY,EAAcF,EAAO,GAAGV,OAErBM,EAAI,EAAGA,EAAIK,EAAUL,IAAK,CAG/B,IAFA,IAAMW,EAAO,GAEJF,EAAI,EAAGA,EAAIH,EAAaG,IAC7BE,EAAK1D,KAAKmD,EAAOK,GAAGT,IAGxBJ,EAASe,ID9BTC,CAAUzD,EAASyC,GACrB,MAAOiB,GACL,OAAOxB,KAAKC,MAAMuB,EAAMC,SAG5B,OAAO,KDCQC,CAAgBtB,EAAQtC,SACnCwC,IACF1E,EAAMkE,aAAc,EACpBlE,EAAMiE,MAAQS,EAAOO,OAAS,SAAW,SACzCT,EAAQT,UAAW,GAGrB/D,EAAMqD,QAAUA,EAAQ0C,OAAO,CAACvB,IAChCxE,EAAM0D,cAENtD,KAAKe,SAASnB,K,wCAId,IAAMA,EAAQoE,KAAKC,MAAMD,KAAKE,UAAUlE,KAAKJ,QAE7CA,EAAMkE,aAAelE,EAAMkE,YAE3B9D,KAAKe,SAASnB,K,6BAGTuD,GACL,IAAMvD,EAAQoE,KAAKC,MAAMD,KAAKE,UAAUlE,KAAKJ,QAE7CA,EAAM0D,YAAcH,EACpBvD,EAAMgE,QAAWT,EAAO,IAAO,EAC/BvD,EAAMiE,MAAQjE,EAAMgE,QAAU,SAAW,SAEzC5D,KAAKe,SAASnB,K,+BAGN,IAAD,SACiCI,KAAKJ,MAArCqD,EADD,EACCA,QAASY,EADV,EACUA,MAAOP,EADjB,EACiBA,YAEhBxB,EAAYmB,EAAQK,GAApBxB,QAER,OACE,yBAAK5B,UAAWC,IAAMyF,SACpB,yBAAK1F,UAAWC,IAAM0F,WACnBhC,GAGH,8BACE,kBAAC,EAAD,CACEvC,KArFC,EAsFDC,MArFE,EAsFFO,QAASA,EACThB,QAAS,SAACW,EAAKE,GAAN,OAAc,EAAKmE,kBAAkBrE,EAAKE,MAGrD,kBAAC,EAAD,CAAS2B,YAAaA,EAAaL,QAASA,EAASnC,QAAS,SAACqC,GAAD,OAAU,EAAK4C,OAAO5C,OAGtF,yBAAKjD,UAAS,yBAAoBC,IAAM6F,SAAWlF,QAAS,kBAAM,EAAKC,SAASyC,KAAhF,WAECxD,KAAKJ,MAAMkE,aACV,kBAAC,EAAD,CAAOjB,QAAS,kBAAM,EAAKoD,oBACzB,0BAAM/F,UAAWC,IAAM+F,WACrB,4BAAKrC,IAGP,4BAAQ3D,UAAWC,IAAMgG,aACvB,4BAAQjG,UAAU,eAAeY,QAAS,kBAAM,EAAKC,SAASyC,KAA9D,kB,GArFoBpC,a,MGpBlCoB,IAAS4D,OACL,kBAAC,EAAD,MACAjE,SAASkE,eAAe,W","file":"static/js/main.ad4c89e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardCell\":\"Square_boardCell__1bdT3\",\"xo\":\"Square_xo__3q3Kq\",\"shaked\":\"Square_shaked__1rce_\",\"shake\":\"Square_shake__2eBRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Game_wrapper__2vgrF\",\"titleText\":\"Game_titleText__2VAKE\",\"refresh\":\"Game_refresh__3MzqO\",\"modalBody\":\"Game_modalBody__3pvWN\",\"modalFooter\":\"Game_modalFooter__1WU-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"Modal_modalOverlay__1wneo\",\"modalWindow\":\"Modal_modalWindow__3QHEY\",\"modalHeader\":\"Modal_modalHeader__2Bk-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3UbJd\",\"boardColumn\":\"Board_boardColumn__139Cp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history___VEL5\",\"active\":\"History_active__3m_Dn\"};","import React, { Component } from 'react';\r\nimport style from './Square.module.scss';\r\n\r\nexport default class Square extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shaked: false\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    renderSquare() {\r\n        switch(this.props.value) {\r\n            case 'O':\r\n                return (\r\n                    <svg className={style.xo} height=\"110\" width=\"110\">\r\n                        <circle cx=\"55\" cy=\"55\" r=\"43\"></circle>\r\n                    </svg> \r\n                );\r\n            case 'X':\r\n                return (\r\n                    <svg className={style.xo} height=\"100\" width=\"100\">\r\n                        <line x1=\"10\" y1=\"10\" x2=\"90\" y2=\"90\"></line>\r\n                        <line x1=\"90\" y1=\"10\" x2=\"10\" y2=\"90\"></line>\r\n                    </svg>\r\n                );\r\n            default: \r\n                return null;\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const shaked = this.props.onClick() ? true : false;\r\n\r\n        this.setState({shaked});\r\n    }\r\n\r\n    render() {\r\n        const { shaked } = this.state;\r\n\r\n        const htmlClass = shaked ? `${style.boardCell} ${style.shaked}` : style.boardCell;\r\n\r\n        return (\r\n            <div className={htmlClass} onClick={this.handleClick} onAnimationEnd={() => this.setState({shaked: false})}>\r\n                {this.renderSquare()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Square from '../Square/Square';\r\nimport style from './Board.module.scss';\r\n\r\nexport default class Board extends Component {\r\n    createBoard(rows, colls) {\r\n        const board = [];\r\n\r\n        for (let row = 0;row < rows;row++) {\r\n            const column = [];\r\n\r\n            for (let col = 0;col < colls;col++) {\r\n                column.push((\r\n                    <Square \r\n                        key={`${row}${col}`} \r\n                        value={this.props.squares[row][col]} \r\n                        onClick={() => this.props.onClick(row, col)}\r\n                    />\r\n                ));\r\n            }\r\n\r\n            board.push((\r\n                <div key={row} className={style.boardColumn}>\r\n                    {column}\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        return board;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.board}>\r\n                {this.createBoard(this.props.rows, this.props.colls)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport style from './Modal.module.scss';\r\n\r\nexport default class Modal extends Component {\r\n    root = document.createElement('div');\r\n\r\n    componentDidMount() {\r\n        document.body.appendChild(this.root);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.root);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div className={style.modalOverlay}>\r\n              <div className={style.modalWindow}>\r\n                <div className={style.modalHeader}>\r\n                    <span onClick={this.props.onClose}>×</span>\r\n                </div>\r\n\r\n                {this.props.children}\r\n              </div>\r\n            </div>,\r\n            this.root\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './History.module.scss';\r\n\r\nexport default class History extends Component {\r\n    render() {\r\n        const moves = this.props.history.map((move, index) => {\r\n            const text = index\r\n                ? `Go to Move #${index}`\r\n                : 'Go to game start';\r\n            \r\n            const htmlClass = index === this.props.currentMove ? style.active : '';\r\n\r\n            return (\r\n                <li className={htmlClass} key={index} onClick={() => this.props.onClick(index)}>\r\n                    {text}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className={style.history}>\r\n                {moves}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Board from '../Board/Board';\r\nimport Modal from '../Modal/Modal';\r\nimport History from '../History/History';\r\nimport style from './Game.module.scss';\r\nimport { calculateWinner } from '../../utils/game';\r\n\r\nconst rows = 3;\r\nconst colls = 3;\r\n\r\nconst initState = {\r\n  rows,\r\n  colls,\r\n  history: [\r\n    {\r\n      squares: new Array(rows).fill(new Array(colls).fill(null)),\r\n      gameOver: false\r\n    }\r\n  ],\r\n  currentMove: 0,\r\n  xIsNext: false,\r\n  title: 'Tic Tac Toe',\r\n  isModalOpen: false\r\n};\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = JSON.parse(JSON.stringify(initState));\r\n  }\r\n\r\n  handleSquareClick(row, col) {\r\n    const state = JSON.parse(JSON.stringify(this.state));\r\n\r\n    const history = JSON.parse(JSON.stringify(state.history.slice(0, state.currentMove + 1)));\r\n    \r\n    const current = JSON.parse(JSON.stringify(history[history.length - 1]));\r\n\r\n    if (current.squares[row][col] || state.gameOver) {\r\n      return true;\r\n    }\r\n\r\n    current.squares[row][col] = state.xIsNext ? 'X' : 'O';\r\n\r\n    state.xIsNext = !state.xIsNext;\r\n    state.title = state.xIsNext ? 'X move' : 'O move';\r\n\r\n    const winner = calculateWinner(current.squares);\r\n    if (winner) {\r\n      state.isModalOpen = true;\r\n      state.title = winner.xIsWin ? 'X Wins' : 'O Wins';\r\n      current.gameOver = true;\r\n    }\r\n\r\n    state.history = history.concat([current]);\r\n    state.currentMove++;\r\n\r\n    this.setState(state);\r\n  }\r\n\r\n  handleShowModal() {\r\n    const state = JSON.parse(JSON.stringify(this.state));\r\n\r\n    state.isModalOpen = !state.isModalOpen;\r\n\r\n    this.setState(state);\r\n  }\r\n\r\n  jumpTo(move) {\r\n    const state = JSON.parse(JSON.stringify(this.state));\r\n\r\n    state.currentMove = move;\r\n    state.xIsNext = (move % 2) === 0; \r\n    state.title = state.xIsNext ? 'X move' : 'O move';\r\n\r\n    this.setState(state);\r\n  }\r\n\r\n  render() {\r\n    const { history, title, currentMove } = this.state;\r\n\r\n    const { squares } = history[currentMove];\r\n\r\n    return (\r\n      <div className={style.wrapper}>\r\n        <div className={style.titleText}>\r\n          {title}          \r\n        </div>\r\n\r\n        <main>\r\n          <Board \r\n            rows={rows}\r\n            colls={colls}\r\n            squares={squares}\r\n            onClick={(row, col) => this.handleSquareClick(row, col)}\r\n          />\r\n\r\n          <History currentMove={currentMove} history={history} onClick={(move) => this.jumpTo(move)} />\r\n        </main>\r\n\r\n        <div className={`material-icons ${style.refresh}`} onClick={() => this.setState(initState)}>refresh</div> \r\n\r\n        {this.state.isModalOpen && \r\n          <Modal onClose={() => this.handleShowModal()}>\r\n            <main className={style.modalBody}>\r\n              <h1>{title}</h1>\r\n            </main>\r\n\r\n            <footer className={style.modalFooter}>\r\n              <button className=\"btn btn-blue\" onClick={() => this.setState(initState)}>Restart</button>\r\n            </footer>\r\n          </Modal>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { loopDiagonals, loopColls, loopRows } from './array';\r\n\r\nexport function calculateWinner(squares) {\r\n    const countWin = 3; // amount X or O in one line for win \r\n\r\n    const callback = (array) => {\r\n        if (array.length < countWin) {\r\n            return;\r\n        }\r\n\r\n        let amountX = 0;\r\n        let amountO = 0;\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            switch (array[i]) {\r\n                case 'X':\r\n                    amountX++;\r\n                    break;\r\n                case 'O':\r\n                    amountO++;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } \r\n\r\n        if (amountX !== countWin && amountO !== countWin) { \r\n            return;\r\n        }\r\n\r\n        const xIsWin = amountX === countWin;\r\n\r\n        const errorObject = {\r\n            xIsWin\r\n        };\r\n\r\n        throw new Error(JSON.stringify(errorObject)); \r\n    };\r\n\r\n    try {\r\n        loopDiagonals(squares, callback);\r\n        loopRows(squares, callback);\r\n        loopColls(squares, callback);\r\n    } catch (error) {\r\n        return JSON.parse(error.message);\r\n    }\r\n\r\n    return null;\r\n};","export function loopDiagonals(matrix, callback) {\r\n    const rowCount = matrix.length;\r\n    const columnCount = matrix[0].length;\r\n\r\n    for (let i = 0; i < rowCount - 1; i++) {\r\n        const diagonal = [];\r\n\r\n        for (let row = i, col = 0; row >= 0 && col < columnCount; row--, col++) {\r\n            diagonal.push(matrix[row][col]);\r\n        }\r\n\r\n        callback(diagonal);\r\n    }\r\n\r\n\r\n    for (let i = 0; i < columnCount; i++) {\r\n        const diagonal = [];\r\n\r\n        for (let row = rowCount - 1, col = i; row >= 0 && col < columnCount; row--, col++) {\r\n            diagonal.push(matrix[row][col]);\r\n        }\r\n\r\n        callback(diagonal);\r\n    }\r\n\r\n    for (let i = rowCount - 1; i >= 0; i--) {\r\n        const diagonal = [];\r\n\r\n        for (let row = i, col = 0; row < rowCount && col < columnCount; row++, col++) {\r\n            diagonal.push(matrix[row][col]);\r\n        }\r\n\r\n        callback(diagonal);\r\n    }\r\n\r\n    for (let i = 1; i < columnCount; i++) {\r\n        const diagonal = [];\r\n\r\n        for (let row = 0, col = i; row < rowCount && col < columnCount; row++, col++) {\r\n            diagonal.push(matrix[row][col]);\r\n        }\r\n\r\n        callback(diagonal);\r\n    }\r\n}\r\n\r\nexport function loopRows(matrix, callback) {\r\n    const rowCount = matrix.length;\r\n    const columnCount = matrix[0].length;\r\n\r\n    for (let i = 0; i < rowCount; i++) {\r\n        const row = [];\r\n\r\n        for (let j = 0; j < columnCount; j++) {\r\n            row.push(matrix[i][j]);\r\n        }\r\n\r\n        callback(row);\r\n    }\r\n}\r\n\r\nexport function loopColls(matrix, callback) {\r\n    const rowCount = matrix.length;\r\n    const columnCount = matrix[0].length;\r\n\r\n    for (let i = 0; i < rowCount; i++) {\r\n        const coll = [];\r\n\r\n        for (let j = 0; j < columnCount; j++) {\r\n            coll.push(matrix[j][i]);\r\n        }\r\n\r\n        callback(coll);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game/Game';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <Game />, \r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}